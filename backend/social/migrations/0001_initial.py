# Generated by Django 4.2.15 on 2025-08-14 08:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SocialAccount",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("account_id", models.CharField(max_length=100)),
                ("account_name", models.CharField(max_length=200)),
                ("account_username", models.CharField(blank=True, max_length=100)),
                ("profile_picture_url", models.URLField(blank=True)),
                ("access_token", models.TextField()),
                ("refresh_token", models.TextField(blank=True)),
                ("token_expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("connected", "Connected"),
                            ("expired", "Token Expired"),
                            ("disconnected", "Disconnected"),
                            ("error", "Connection Error"),
                        ],
                        default="connected",
                        max_length=20,
                    ),
                ),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("permissions", models.JSONField(default=list)),
                ("is_active", models.BooleanField(default=True)),
                ("auto_publish", models.BooleanField(default=True)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_accounts",
                        to="social.organization",
                    ),
                ),
            ],
            options={
                "db_table": "social_accounts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SocialPlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("facebook", "Facebook"),
                            ("instagram", "Instagram"),
                            ("linkedin", "LinkedIn"),
                            ("twitter", "Twitter/X"),
                            ("youtube", "YouTube"),
                            ("pinterest", "Pinterest"),
                            ("google_business", "Google My Business"),
                            ("tiktok", "TikTok"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("display_name", models.CharField(max_length=100)),
                ("icon_class", models.CharField(blank=True, max_length=50)),
                ("color_hex", models.CharField(max_length=7)),
                ("is_active", models.BooleanField(default=True)),
                ("api_version", models.CharField(blank=True, max_length=20)),
                ("max_text_length", models.IntegerField(default=280)),
                ("max_image_count", models.IntegerField(default=10)),
                ("max_video_size_mb", models.IntegerField(default=100)),
                ("supports_scheduling", models.BooleanField(default=True)),
                ("supports_hashtags", models.BooleanField(default=True)),
                ("supports_first_comment", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "social_platforms",
                "ordering": ["display_name"],
            },
        ),
        migrations.CreateModel(
            name="SocialPost",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("content", models.TextField()),
                (
                    "post_type",
                    models.CharField(
                        choices=[
                            ("text", "Text Only"),
                            ("image", "Image Post"),
                            ("video", "Video Post"),
                            ("carousel", "Carousel/Album"),
                            ("story", "Story"),
                            ("reel", "Reel/Short"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                ("hashtags", models.JSONField(default=list)),
                ("mentions", models.JSONField(default=list)),
                ("first_comment", models.TextField(blank=True)),
                ("media_files", models.JSONField(default=list)),
                ("thumbnail_url", models.URLField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("scheduled", "Scheduled"),
                            ("publishing", "Publishing"),
                            ("published", "Published"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("original_content", models.TextField(blank=True)),
                ("ai_suggestions", models.JSONField(default=dict)),
                ("ai_generated", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_posts",
                        to="social.organization",
                    ),
                ),
            ],
            options={
                "db_table": "social_posts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SocialPostTarget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content_override", models.TextField(blank=True)),
                ("hashtags_override", models.JSONField(default=list)),
                ("platform_post_id", models.CharField(blank=True, max_length=200)),
                ("platform_url", models.URLField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("scheduled", "Scheduled"),
                            ("publishing", "Publishing"),
                            ("published", "Published"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("retry_count", models.IntegerField(default=0)),
                ("max_retries", models.IntegerField(default=3)),
                ("next_retry_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social.socialaccount",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="targets",
                        to="social.socialpost",
                    ),
                ),
            ],
            options={
                "db_table": "social_post_targets",
                "ordering": ["-created_at"],
                "unique_together": {("post", "account")},
            },
        ),
        migrations.CreateModel(
            name="SocialMediaFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("file", models.FileField(upload_to="social_media/%Y/%m/")),
                ("file_name", models.CharField(max_length=255)),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("video", "Video"),
                            ("gif", "GIF"),
                            ("document", "Document"),
                        ],
                        max_length=20,
                    ),
                ),
                ("file_size", models.BigIntegerField()),
                ("mime_type", models.CharField(max_length=100)),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                ("duration", models.FloatField(blank=True, null=True)),
                ("alt_text", models.TextField(blank=True)),
                ("ai_tags", models.JSONField(default=list)),
                ("is_appropriate", models.BooleanField(default=True)),
                ("usage_count", models.IntegerField(default=0)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_media_files",
                        to="social.organization",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "social_media_files",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SocialIdea",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("content_draft", models.TextField(blank=True)),
                ("tags", models.JSONField(default=list)),
                ("category", models.CharField(blank=True, max_length=100)),
                ("target_platforms", models.JSONField(default=list)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("idea", "Idea"),
                            ("in_progress", "In Progress"),
                            ("scheduled", "Scheduled"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="idea",
                        max_length=20,
                    ),
                ),
                ("priority", models.IntegerField(default=3)),
                ("ai_generated", models.BooleanField(default=False)),
                ("ai_prompt", models.TextField(blank=True)),
                ("inspiration_urls", models.JSONField(default=list)),
                ("reference_images", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_ideas",
                        to="social.organization",
                    ),
                ),
                (
                    "related_post",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="social.socialpost",
                    ),
                ),
            ],
            options={
                "db_table": "social_ideas",
                "ordering": ["-priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SocialAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("likes", models.IntegerField(default=0)),
                ("comments", models.IntegerField(default=0)),
                ("shares", models.IntegerField(default=0)),
                ("saves", models.IntegerField(default=0)),
                ("impressions", models.IntegerField(default=0)),
                ("reach", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("video_completion_rate", models.FloatField(default=0.0)),
                ("platform_metrics", models.JSONField(default=dict)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "post_target",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="social.socialposttarget",
                    ),
                ),
            ],
            options={
                "db_table": "social_analytics",
            },
        ),
        migrations.AddField(
            model_name="socialaccount",
            name="platform",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="social.socialplatform"
            ),
        ),
        migrations.CreateModel(
            name="SocialQueue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("is_active", models.BooleanField(default=True)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("schedule_times", models.JSONField(default=list)),
                ("posts_per_day", models.IntegerField(default=5)),
                ("min_interval_hours", models.IntegerField(default=2)),
                ("optimize_timing", models.BooleanField(default=False)),
                ("best_times", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social.socialaccount",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_queues",
                        to="social.organization",
                    ),
                ),
            ],
            options={
                "db_table": "social_queues",
                "ordering": ["name"],
                "unique_together": {("organization", "account", "name")},
            },
        ),
        migrations.CreateModel(
            name="SocialHashtag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag", models.CharField(max_length=100)),
                ("display_tag", models.CharField(max_length=100)),
                ("usage_count", models.IntegerField(default=0)),
                ("avg_engagement", models.FloatField(default=0.0)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("category", models.CharField(blank=True, max_length=100)),
                ("relevance_score", models.FloatField(default=0.0)),
                ("platform_performance", models.JSONField(default=dict)),
                ("is_trending", models.BooleanField(default=False)),
                ("is_favorite", models.BooleanField(default=False)),
                ("is_blocked", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_hashtags",
                        to="social.organization",
                    ),
                ),
            ],
            options={
                "db_table": "social_hashtags",
                "ordering": ["-usage_count", "tag"],
                "unique_together": {("organization", "tag")},
            },
        ),
        migrations.CreateModel(
            name="SocialComment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("platform_comment_id", models.CharField(max_length=200)),
                (
                    "comment_type",
                    models.CharField(
                        choices=[
                            ("comment", "Comment"),
                            ("reply", "Reply"),
                            ("mention", "Mention"),
                            ("dm", "Direct Message"),
                        ],
                        default="comment",
                        max_length=20,
                    ),
                ),
                ("content", models.TextField()),
                ("author_name", models.CharField(max_length=200)),
                ("author_username", models.CharField(blank=True, max_length=100)),
                ("author_profile_url", models.URLField(blank=True)),
                ("author_avatar_url", models.URLField(blank=True)),
                (
                    "sentiment",
                    models.CharField(
                        choices=[
                            ("positive", "Positive"),
                            ("neutral", "Neutral"),
                            ("negative", "Negative"),
                            ("question", "Question"),
                            ("complaint", "Complaint"),
                        ],
                        default="neutral",
                        max_length=20,
                    ),
                ),
                ("ai_tags", models.JSONField(default=list)),
                ("priority_score", models.IntegerField(default=0)),
                ("is_replied", models.BooleanField(default=False)),
                ("is_flagged", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("replied_at", models.DateTimeField(blank=True, null=True)),
                ("platform_created_at", models.DateTimeField()),
                ("platform_data", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social.socialaccount",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_comments",
                        to="social.organization",
                    ),
                ),
                (
                    "post_target",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="social.socialposttarget",
                    ),
                ),
                (
                    "replied_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "social_comments",
                "ordering": ["-platform_created_at"],
                "unique_together": {("account", "platform_comment_id")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="socialaccount",
            unique_together={("organization", "platform", "account_id")},
        ),
    ]
